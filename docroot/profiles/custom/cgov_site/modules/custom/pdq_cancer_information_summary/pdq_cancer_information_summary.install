<?php

/**
 * @file
 * Contains pdq_cancer_information_summary.install.
 */

use Drupal\cgov_core\CgovCoreTools;

use Drupal\Core\Config\FileStorage;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_install().
 *
 * Set up the site for Cancer Information Summaries.
 *
 * @see system_install()
 */
function pdq_cancer_information_summary_install() {

  // Get our helper.
  $siteHelper = \Drupal::service('cgov_core.tools');

  // Add content type permissions and assign to workflow.
  $siteHelper->addContentTypePermissions('pdq_cancer_information_summary', ['pdq_importer'], CgovCoreTools::DEFAULT_PERMISSIONS);

  // Install permissions for this module.
  pdq_cancer_information_summary_install_permissions($siteHelper);
}

/**
 * Installs permissions for this module.
 *
 * @param \Drupal\cgov_core\CgovCoreTools $siteHelper
 *   Cgov tools service.
 */
function pdq_cancer_information_summary_install_permissions(CgovCoreTools $siteHelper) {
  $perms = [
    'admin_ui' => [
      'access pdq_cis_browser entity browser pages',
    ],
    'pdq_importer' => [
      'restful get pdq_cis_api',
      'restful patch pdq_cis_api',
      'restful post pdq_cis_api',
    ],
  ];

  $siteHelper->addRolePermissions($perms);
}

/**
 * Add a new permission to the pdq_importer role.
 */
function pdq_cancer_information_summary_update_8001() {

  // Get the helper service.
  $siteHelper = \Drupal::service('cgov_core.tools');

  // Install the new permission.
  $perms = ['pdq_importer' => ['restful patch pdq_cis_api']];
  $siteHelper->addRolePermissions($perms);
}

/**
 * Install new node field.
 *
 * @param string $name
 *   The name of the field to install.
 */
function _pdq_cancer_information_summary_install_node_field($name) {
  $dir = new FileStorage(__DIR__ . '/config/install/');
  if (!FieldStorageConfig::loadByName('node', $name)) {
    $record = $dir->read("field.storage.node.$name");
    FieldStorageConfig::create($record)->save();
    \Drupal::logger('pdq_cancer_information_summary')->notice("Installed storage config for $name.");
  }
  else {
    \Drupal::logger('pdq_cancer_information_summary')->notice("Storage config for $name already installed.");
  }
  if (!FieldConfig::loadByName('node', 'pdq_cancer_information_summary', $name)) {
    $record = $dir->read("field.field.node.pdq_cancer_information_summary.$name");
    FieldConfig::create($record)->save();
    \Drupal::logger('pdq_cancer_information_summary')->notice("Installed field config for $name.");
  }
  else {
    \Drupal::logger('pdq_cancer_information_summary')->notice("Field config for $name already installed.");
  }
}

/**
 * Add new field to indentify "Single-view patient content" summaries.
 *
 * Creates the field's database table rows for existing summaries.
 */
function pdq_cancer_information_summary_update_9001(&$sandbox) {

  // Make sure the field is installed.
  _pdq_cancer_information_summary_install_node_field('field_pdq_is_svpc');

  // Make sure it shows up on the form.
  $name = 'core.entity_form_display.node.pdq_cancer_information_summary.default';
  $config = \Drupal::getContainer()->get('config.factory')->getEditable($name);
  $content = $config->get('content');
  $hidden = $config->get('hidden');
  $weight = $content['field_summary_sections']['weight'] ?? 1000;
  $content['field_pdq_is_svpc'] = [
    'weight' => $weight - 1,
    'settings' => ['display_label' => TRUE],
    'third_party_settings' => [],
    'type' => 'boolean_checkbox',
    'region' => 'content',
  ];
  unset($hidden['field_pdq_is_svpc']);
  $config->set('content', $content);
  $config->set('hidden', $hidden);
  $config->save();
  \Drupal::logger('pdq_cancer_information_summary')->notice('Installed field_pdq_is_svpc on the edit form.');

  // Make sure software querying the field doesn't get back a NULL.
  $db = \Drupal::database();
  $bundle = 'pdq_cancer_information_summary';
  $fields = [
    'bundle',
    'deleted',
    'entity_id',
    'revision_id',
    'langcode',
    'delta',
    'field_pdq_is_svpc_value',
  ];
  $prefixes = ['node', 'node_revision'];
  foreach ($prefixes as $prefix) {
    $cdr_id_table = "{$prefix}__field_pdq_cdr_id";
    $svpc_table = "{$prefix}__field_pdq_is_svpc";
    $results = $db->select($svpc_table, 't')
      ->fields('t', ['entity_id', 'revision_id', 'langcode'])
      ->condition('bundle', $bundle)
      ->condition('deleted', 0)
      ->distinct()
      ->execute();
    $found = [];
    foreach ($results as $result) {
      $key = $result->entity_id . '|' . $result->revision_id . '|' . $result->langcode;
      $found[$key] = $key;
    }
    $results = $db->select($cdr_id_table, 't')
      ->fields('t', ['entity_id', 'revision_id', 'langcode'])
      ->condition('bundle', $bundle)
      ->condition('deleted', 0)
      ->distinct()
      ->execute();
    $records = [];
    foreach ($results as $result) {
      $key = $result->entity_id . '|' . $result->revision_id . '|' . $result->langcode;
      if (!array_key_exists($key, $found)) {
        $records[] = [
          'bundle' => $bundle,
          'deleted' => 0,
          'entity_id' => $result->entity_id,
          'revision_id' => $result->revision_id,
          'langcode' => $result->langcode,
          'delta' => 0,
          'field_pdq_is_svpc_value' => 0,
        ];
      }
    }
    $insert = $db->insert($svpc_table)->fields($fields);
    foreach ($records as $record) {
      $insert->values($record);
    }
    $insert->execute();
    $count = count($records);
    \Drupal::logger($bundle)->notice("Created $count rows in $svpc_table.");
  }
}

/**
 * Add new field to suppress display of "On This Page" section.
 *
 * Creates the field's database table rows for existing summaries.
 */
function pdq_cancer_information_summary_update_9002(&$sandbox) {

  // Make sure the field is installed.
  _pdq_cancer_information_summary_install_node_field('field_pdq_suppress_otp');

  // Make sure it shows up on the form.
  $name = 'core.entity_form_display.node.pdq_cancer_information_summary.default';
  $config = \Drupal::getContainer()->get('config.factory')->getEditable($name);
  $content = $config->get('content');
  $hidden = $config->get('hidden');
  $weight = $content['field_summary_sections']['weight'] ?? 1000;
  $content['field_pdq_suppress_otp'] = [
    'weight' => $weight - 1,
    'settings' => ['display_label' => TRUE],
    'third_party_settings' => [],
    'type' => 'boolean_checkbox',
    'region' => 'content',
  ];
  unset($hidden['field_pdq_suppress_otp']);
  $config->set('content', $content);
  $config->set('hidden', $hidden);
  $config->save();
  \Drupal::logger('pdq_cancer_information_summary')->notice('Installed field_pdq_suppress_otp on the edit form.');

  // Make sure software querying the field doesn't get back a NULL.
  $db = \Drupal::database();
  $bundle = 'pdq_cancer_information_summary';
  $fields = [
    'bundle',
    'deleted',
    'entity_id',
    'revision_id',
    'langcode',
    'delta',
    'field_pdq_suppress_otp_value',
  ];
  $prefixes = ['node', 'node_revision'];
  foreach ($prefixes as $prefix) {
    $cdr_id_table = "{$prefix}__field_pdq_cdr_id";
    $suppress_otp_table = "{$prefix}__field_pdq_suppress_otp";
    $results = $db->select($suppress_otp_table, 't')
      ->fields('t', ['entity_id', 'revision_id', 'langcode'])
      ->condition('bundle', $bundle)
      ->condition('deleted', 0)
      ->distinct()
      ->execute();
    $found = [];
    foreach ($results as $result) {
      $key = $result->entity_id . '|' . $result->revision_id . '|' . $result->langcode;
      $found[$key] = $key;
    }
    $results = $db->select($cdr_id_table, 't')
      ->fields('t', ['entity_id', 'revision_id', 'langcode'])
      ->condition('bundle', $bundle)
      ->condition('deleted', 0)
      ->distinct()
      ->execute();
    $records = [];
    foreach ($results as $result) {
      $key = $result->entity_id . '|' . $result->revision_id . '|' . $result->langcode;
      if (!array_key_exists($key, $found)) {
        $records[] = [
          'bundle' => $bundle,
          'deleted' => 0,
          'entity_id' => $result->entity_id,
          'revision_id' => $result->revision_id,
          'langcode' => $result->langcode,
          'delta' => 0,
          'field_pdq_suppress_otp_value' => 0,
        ];
      }
    }
    $insert = $db->insert($suppress_otp_table)->fields($fields);
    foreach ($records as $record) {
      $insert->values($record);
    }
    $insert->execute();
    $count = count($records);
    \Drupal::logger($bundle)->notice("Created $count rows in $suppress_otp_table.");
  }
}

/**
 * Add new field for optional introductory text section without a title.
 */
function pdq_cancer_information_summary_update_9003(&$sandbox) {

  // Make sure the field is installed.
  _pdq_cancer_information_summary_install_node_field('field_pdq_intro_text');

  // Make sure it shows up on the form.
  $name = 'core.entity_form_display.node.pdq_cancer_information_summary.default';
  $config = \Drupal::getContainer()->get('config.factory')->getEditable($name);
  $content = $config->get('content');
  $hidden = $config->get('hidden');
  $weight = $content['field_summary_sections']['weight'] ?? 1000;
  $content['field_pdq_intro_text'] = [
    'weight' => $weight - 1,
    'settings' => [
      'display_label' => TRUE,
      'rows' => 5,
      'placeholder' => '',
    ],
    'third_party_settings' => [],
    'type' => 'text_textarea',
    'region' => 'content',
  ];
  unset($hidden['field_pdq_intro_text']);
  $config->set('content', $content);
  $config->set('hidden', $hidden);
  $config->save();
  \Drupal::logger('pdq_cancer_information_summary')->notice('Installed field_pdq_intro_text on the edit form.');
}

/**
 * Add new field for cancer-type home page card titles.
 */
function pdq_cancer_information_summary_update_9004(&$sandbox) {

  // Make sure the field is installed.
  _pdq_cancer_information_summary_install_node_field('field_cthp_card_title');

  // Make sure it shows up on the form.
  $name = 'core.entity_form_display.node.pdq_cancer_information_summary.default';
  $config = \Drupal::getContainer()->get('config.factory')->getEditable($name);
  $content = $config->get('content');
  $hidden = $config->get('hidden');
  $weight = $content['field_browser_title']['weight'] ?? 10;
  $content['field_cthp_card_title'] = [
    'weight' => $weight,
    'settings' => ['display_label' => TRUE],
    'third_party_settings' => [],
    'type' => 'string_textfield',
    'region' => 'content',
  ];
  unset($hidden['field_cthp_card_title']);
  $config->set('content', $content);
  $config->set('hidden', $hidden);
  $config->save();
  \Drupal::logger('pdq_cancer_information_summary')->notice('Installed field_cthp_card_title on the edit form.');
}

/**
 * The next update hook will go here.
 *
 * The logic for ensuring that new fields are added to the edit form
 * is repeated in each update hook.  For future updates, please
 * consider creating a helper function to avoid duplication.
 */
