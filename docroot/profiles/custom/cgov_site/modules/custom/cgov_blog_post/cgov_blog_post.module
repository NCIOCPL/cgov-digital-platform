<?php

/**
 * @file
 * Contains cgov_blog_post.module.
 */

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\BeforeCommand;
use Drupal\Core\Ajax\RemoveCommand;
use Drupal\Core\Entity\EntityFormInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function cgov_blog_post_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Add custom validation for Cgov Blog Posts only.
  if ($form_id == 'node_cgov_blog_post_form' || $form_id == 'node_cgov_blog_post_edit_form') {

    /* @var Drupal\Core\Entity\FieldableEntityInterface $entity */
    $formObject = $form_state->getFormObject();
    if ($formObject instanceof EntityFormInterface) {
      $entity = $formObject->getEntity();
      if (
        $entity->getEntityTypeId() === 'node'
      ) {
        $form['#attached']['library'][] = 'cgov_blog_post/cgov_blog_post_admin';
      }
    }

    // Get the current workflow state.
    // ksm($moderation_state;:
    $moderation_state = get_moderation_state($form);
    // Do form behavior based on workflow.
    switch ($moderation_state) {
      case "draft":
      case "review":
        $form['field_blog_series']['widget']['#ajax'] = [
          'callback' => 'display_cats',
          'event' => 'change',
          'progress' => [
            'message' => NULL,
            'type' => 'throbber',
          ],
        ];
        break;

      case "archive_requested":
      case "archived":
      case "editing":
      case "post_publication_review":
      case "published":
        $form['field_blog_series']['#disabled'] = TRUE;
        break;

      default:
        break;
    }

    // Debug:
    // ksm($moderation_state);
    // ksm($form['field_blog_series']);
  }
  /*
   * TODO:
   * - verify series
   */
}

/**
 * Implements hook_entity_presave().
 */
function cgov_blog_post_entity_presave(EntityInterface $entity) {
  // Do things to make the Blog Categories save upon changing.
}

/**
 * Ajax callback.
 */
function display_cats(array $form, FormStateInterface $form_state) {

  $show_topics = 'show-topics-field';
  $ajax_response = new AjaxResponse();
  $moderation_state = get_moderation_state($form);

  // Do AJAX behavior based on workflow.
  switch ($moderation_state) {

    case "draft":
      $filtered = filter_cats($form);
      $ajax_response->addCommand(new RemoveCommand('.' . $show_topics));
      $ajax_response->addCommand(new BeforeCommand('#edit-field-blog-topics-wrapper',
          '<div class="' . $show_topics . '">' . $filtered . '</div>'));
      break;

    case "archive_requested":
    case "archived":
    case "editing":
    case "post_publication_review":
    case "published":
    case "review":
    default:
      break;
  }

  return $ajax_response;
}

/**
 * Filter taxonomy categories.
 */
function filter_cats(array $form) {
  return 'bar';
}

/**
 * Clear all taxonomy checks.
 */
function clear_cats(array $form) {

}

/**
 * Util function to return the moderation state of a given form.
 */
function get_moderation_state(array $form) {
  $moderation_state = $form['moderation_state']['widget'][0]['state']['#default_value'];
  // TODO: null check.
  return $moderation_state;
}
