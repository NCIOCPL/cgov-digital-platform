<?php

/**
 * @file
 * Contains cgov_blog_post.module.
 */

use Drupal\Core\Ajax\AjaxResponse;
// USE Drupal\Core\Ajax\AppendCommand;!
use Drupal\Core\Ajax\BeforeCommand;
// Uuse Drupal\Core\Ajax\CssCommand;.
use Drupal\Core\Ajax\RemoveCommand;
use Drupal\Core\Entity\EntityFormInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function cgov_blog_post_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Add custom validation for Cgov Blog Posts only.
  if ($form_id == 'node_cgov_blog_post_form' || $form_id == 'node_cgov_blog_post_edit_form') {

    /* @var Drupal\Core\Entity\FieldableEntityInterface $entity */
    $formObject = $form_state->getFormObject();
    if ($formObject instanceof EntityFormInterface) {
      $entity = $formObject->getEntity();
      if (
        $entity->getEntityTypeId() === 'node'
      ) {
        $form['#attached']['library'][] = 'cgov_blog_post/cgov_blog_post_admin';
      }
    }

    // Get the current workflow state.
    // ksm($moderation_state;:
    $moderation_state = $form['moderation_state']['widget'][0]['state']['#default_value'];
    // Do form behavior based on workflow.
    switch ($moderation_state) {
      case "draft":
        $form['field_blog_series']['widget']['#ajax'] = [
          'callback' => 'set_blog_cats',
          'event' => 'change',
          'progress' => [
            'message' => NULL,
            'type' => 'throbber',
          ],
          'wrapper' => 'display-filtered-topics',
        ];

        $form['field_blog_topics']['#prefix'] = '<div id="display-filtered-topics">';
        $form['field_blog_topics']['#suffix'] = '</div>';
        break;

      case "archive_requested":
      case "archived":
      case "post_publication_review":
      case "editing":
      case "published":
      case "review":
        $form['field_blog_series']['#disabled'] = TRUE;
        break;

      default:
        break;

    }

    // Debug:
    // ksm($moderation_state);
    ksm($form['field_blog_series']);
  } /* End if blog post */
  /*
   * TODO:
   * - verify series
   * - block series editing once published
   * - state validation
   */
}

/**
 * Ajax callback.
 */
function set_blog_cats(array $form, FormStateInterface $form_state) {
  $term_name = '==&hearts; debug &hearts;==';
  $ajax_response = new AjaxResponse();
  $ajax_response->addCommand(new RemoveCommand('.dummy-label'));
  $ajax_response->addCommand(new BeforeCommand('#edit-field-blog-topics-wrapper', '<div class="dummy-label">' . $term_name . '</div>'));
  return $ajax_response;
}
