<?php

/**
 * @file
 * The Cgov Site Section module file.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\cgov_site_section\FieldStorageDefinition;
use Drupal\Core\Field\FieldDefinition;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_field_storage_info().
 */
function cgov_site_section_entity_field_storage_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() == 'taxonomy_term') {
    $definitions['computed_path'] = FieldStorageDefinition::create('string')
      ->setName('computed_path')
      ->setLabel(t('A custom computed site section field'))
      ->setTargetEntityTypeId($entity_type->id());
    return $definitions;
  }
}

/**
 * Implements hook_entity_bundle_field_info().
 */
function cgov_site_section_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  if ($entity_type->id() === 'taxonomy_term' && $bundle === 'cgov_site_sections') {
    /** @var \Drupal\Core\Field\FieldStorageDefinitionInterface $custom_bundle_field_storage */
    $custom_bundle_field_storage = cgov_site_section_entity_field_storage_info($entity_type)['computed_path'];
    $definitions[$custom_bundle_field_storage->getName()] = FieldDefinition::createFromFieldStorageDefinition($custom_bundle_field_storage);
    return $definitions;
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 *
 * Prior to saving a taxonomy term, this sets the value for the psuedo computed
 * field 'computed_path'. 'computed_path' consists of the parents terms path
 *  and this terms Pretty URL Field.
 */
function cgov_site_section_taxonomy_term_presave(EntityInterface $entity) {
  if ($entity->bundle() === 'cgov_site_sections') {
    $field_pretty_url = $entity->get('field_pretty_url')->value;

    if (!empty($entity->id()) && isset($field_pretty_url)) {
      $ancestors = \Drupal::service('entity_type.manager')->getStorage("taxonomy_term")->loadAllParents($entity->get('parent')->target_id);
      $values = [];

      foreach ($ancestors as $term) {
        $value = $term->get('field_pretty_url')->value;
        $values[] = $value;
      }
      $computed_parent = implode('/', $values);
      $entity->set('computed_path', '/' . $computed_parent . '/' . $field_pretty_url);
    }
    else {
      $entity->set('computed_path', '/' . $field_pretty_url);
    }
  }
}
