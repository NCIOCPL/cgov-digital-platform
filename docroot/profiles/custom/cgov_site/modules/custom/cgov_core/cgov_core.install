<?php

/**
 * @file
 * Contains cgov_press_release.install.
 */

use Drupal\block\Entity\Block;
use Drupal\block_content\Entity\BlockContent;
use Drupal\cgov_core\CgovCoreTools;
use Drupal\editor\Entity\Editor;

/**
 * Implements hook_install().
 *
 * Set up cgov_core module.
 *
 * @see system_install()
 */
function cgov_core_install() {
  // Get the helper service.
  $siteHelper = \Drupal::service('cgov_core.tools');

  // Add Roles.
  $siteHelper->addRole('content_author', 'Content Author', -8);
  $siteHelper->addRole('content_editor', 'Content Editor', -7);
  $siteHelper->addRole('advanced_editor', 'Advanced Editor', -6);
  $siteHelper->addRole('layout_manager', 'Layout Manager', -5);
  $siteHelper->addRole('site_admin', 'Site Admin', -4);
  $siteHelper->addRole('admin_ui', 'Admin UI', 3);
  $siteHelper->addRole('content_previewer', 'Content Previewer', 4);

  // Install permissions for this module.
  _cgov_core_install_permissions($siteHelper);
  _cgov_core_remove_permissions($siteHelper);
}

/**
 * Installs permissions for this module.
 *
 * @param \Drupal\cgov_core\CgovCoreTools $siteHelper
 *   Cgov tools service.
 */
function _cgov_core_install_permissions(CgovCoreTools $siteHelper) {
  $perms = [
    'admin_ui' => [
      'access media overview',
      'access cgov_media_browser entity browser pages',
      'access administration pages',
      'view the administration theme',
      'access cgov_content_browser entity browser pages',
      'access cgov_embedded_content_browser entity browser pages',
      'access toolbar',
      'use moderation sidebar',
      'link to any page',
      'use text format full_html',
      'use text format raw_html',
      'use text format simple',
      'use text format streamlined',
      'use text format ncids_streamlined',
      'use text format ncids_streamlined_no_headings',
    ],
    'advanced_editor' => [
      'access taxonomy overview',
      'access block library',
      'administer taxonomy',
      'administer blocks',
      'administer redirects',
      'administer menu',
      'delete content translations',
      'use editorial_workflow transition quick_publish_replace',
      'use editorial_workflow transition quick_publish',
      'use simple_workflow transition create_new_draft',
      'use simple_workflow transition publish',
    ],
    'authenticated' => [
      'access content',
      'view media',
    ],
    'content_author' => [
      'access content overview',
      'create content translations',
      'use editorial_workflow transition back_to_draft',
      'use editorial_workflow transition back_to_editing',
      'use editorial_workflow transition request_archive',
      'use editorial_workflow transition request_review_pub',
      'use editorial_workflow transition request_review',
      'use editorial_workflow transition resurrect_archived_content',
      'use editorial_workflow transition revise',
      'view any unpublished content',
      'view latest version',
      'view all media revisions',
      'view all revisions',
    ],
    'content_editor' => [
      'use editorial_workflow transition approve_archive',
      'use editorial_workflow transition approve',
      'use editorial_workflow transition back_to_draft',
      'use editorial_workflow transition back_to_editing',
      'use editorial_workflow transition publish',
      'use editorial_workflow transition reject_archive',
    ],
    'content_previewer' => [
      'view all media revisions',
      'view all revisions',
      'view latest version',
      'view any unpublished content',
    ],
    'site_admin' => [
      // View Logs.
      'access site reports',
      // Manage Users.
      'administer users',
      'select account cancellation method',
      'access user profiles',
      'administer account settings',
      // Set Launch tag after site provisioning.
      'administer cgov adobe',
      // Set microsite theme colors after provisioning.
      'administer themes',
      'administer frontend globals',
      // Let site_admin assign roles.
      'edit user roles',
      // Other random permissions.
      'access site in maintenance mode',
      'access files overview',
      // Custom permissions.
      'Basic site settings',
      'File system',
      'Logging and errors',
      'RSS publishing',
      'View plugins',
      'Field list report',
      'regenerate urls',
      'administer responsive favicons',
    ],
  ];

  $siteHelper->addRolePermissions($perms);
}

/**
 * Remove permissions we don't want the user to have.
 *
 * @param \Drupal\cgov_core\CgovCoreTools $siteHelper
 *   Cgov tools service.
 */
function _cgov_core_remove_permissions(CgovCoreTools $siteHelper) {
  $perms_to_remove = [
    'admin_ui' => [
      'access help pages',
    ],
  ];

  $siteHelper->removeRolePermissions($perms_to_remove);
}

/**
 * Implements hook_themes_installed().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_themes_installed()
 */
function cgov_core_themes_installed($theme_list) {
  // Create Contact Us block for Press Releases.
  foreach ($theme_list as $theme) {
    if ($theme != 'ncids_trans' && $theme != 'cgov_common') {
      // Skip doing this if a drupal core theme is being installed.
      continue;
    }
    $blockContent = \Drupal::entityTypeManager()->getStorage('block_content')->loadByProperties(['info' => 'Public Use']);
    if (empty($blockContent)) {
      $block_theme = $theme;
      $block_region = 'public_use';
      $block_label = 'Public Use';
      $block_html = <<<EOMarkup
      <p><em>If you would like to reproduce some or all of this content, see <a class="usa-link" href="/policies/copyright-reuse">Reuse of NCI Information</a> for guidance about copyright and permissions. In the case of permitted digital reproduction, please credit the National Cancer Institute as the source and link to the original NCI product using the original product's title; e.g., “[current-page:title] was originally published by the National Cancer Institute.”</em></p>
      EOMarkup;

      // Create block content.
      $block_content = BlockContent::create([
        'id' => 'public_use',
        'type' => 'content_block',
        'info' => $block_label,
        'body' => ['value' => $block_html, 'format' => 'full_html'],
      ]);
      $block_content->save();

      // Assign block to Region.
      $data = [
        'id' => 'public_use',
        'plugin' => 'block_content:' . $block_content->uuid(),
        'region' => $block_region,
        'provider' => 'block_content',
        'weight' => 0,
        'theme' => $block_theme,
        'settings' => [
          'label' => $block_label,
          'label_display' => '0',
        ],
      ];

      $block = Block::create($data);
      $block->save();
    }
  }
}

/**
 * The most recent update hook.
 */
function cgov_core_update_10009() {
}

/**
 * Remove ckeditor.
 */
function cgov_core_update_10010() {
  $installer = \Drupal::service('module_installer');
  if (\Drupal::moduleHandler()->moduleExists('ckeditor')) {
    $installer->uninstall(['ckeditor'], FALSE);
  }
  if (!\Drupal::moduleHandler()->moduleExists('ckeditor5')) {
    $installer->install(['ckeditor5']);
  }
}

/**
 * Enable nci_definition.
 */
function cgov_core_update_10011() {
  $installer = \Drupal::service('module_installer');
  if (!\Drupal::moduleHandler()->moduleExists('nci_definition')) {
    $installer->install(['nci_definition']);
  }
}

/**
 * Updates article page intro text to use ncids_streamlined_no_headings.
 */
function cgov_core_update_10012() {
  $db = \Drupal::database();
  $bundle = 'cgov_article';
  // Node table updates.
  $db->update('node__field_intro_text')
    ->fields(['field_intro_text_format' => 'ncids_streamlined_no_headings'])
    ->condition('bundle', $bundle)
    ->execute();

  // Node revision table updates.
  $db->update('node_revision__field_intro_text')
    ->fields(['field_intro_text_format' => 'ncids_streamlined_no_headings'])
    ->condition('bundle', $bundle)
    ->execute();
}

/**
 * Enable nci_ckeditor5_cleanup module and set clean_styles to true.
 */
function cgov_core_update_10013() {
  $installer = \Drupal::service('module_installer');
  if (!\Drupal::moduleHandler()->moduleExists('nci_ckeditor5_cleanup')) {
    $installer->install(['nci_ckeditor5_cleanup']);

    $editor = Editor::load('full_html');
    $editor->setThirdPartySetting('nci_ckeditor5_cleanup', 'clean_styles', TRUE);
    $editor->save();
  }
}

/**
 * I am a comment to test 4946.
 */
