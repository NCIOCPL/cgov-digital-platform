//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with browser-based text zoom or user-set defaults.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
// $base-line-height: 150%;

// This is the default html and body font-size for the base em value.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be a different size and not have it effect grid size too,
// set the value of $em-base to $base-font-size ($em-base: $base-font-size;)
$em-base: 16px !default;


// It strips the unit of measure and returns it
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
  }
  
  // Converts "px" to "em" using the ($)em-base
  @function convert-to-em($value, $base-value: $em-base)  {
    $value: strip-unit($value) / strip-unit($base-value) * 1em;
    @if ($value == 0em) { $value: 0; } // Turn 0em into 0
    @return $value;
  }
  
  // Working in ems is annoying. Think in pixels by using this handy function, em-calc(#)
  // Just enter the number, no need to mention "px"
  @function em-calc($values, $base-value: $em-base) {
    $max: length($values); // Get the total number of parameters passed
  
    // If there is only 1 parameter, then return it as an integer.
    // This is done because a list can''t be multiplied or divided even if it contains a single value
    @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }
  
    $emValues: (); // This will eventually store the converted $values in a list
    @for $i from 1 through $max {
      $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
    }
    @return $emValues;
  }
  
  //Retaining this for backward compatability
  
  @function emCalc($pxWidth) {
    @return $pxWidth / $em-base * 1em;
  }
  
  // Maybe you want to create rems with pixels
  // $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
  // @function rem-calc($pxWidth) {
  //   @return $pxWidth / $rem-base * 1rem;
  // }
  
  // Change whether or not you include browser prefixes
  // $experimental: true;
  